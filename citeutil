#!/usr/bin/env python

import argparse
import json
import requests
import os
import sys
import re

import formatter
import source
import worktype

def process_doi(raw_doi, reference_formatter):
    try:
        work = source.retrieve_from_doi(raw_doi)
        print reference_formatter.format(work)
    except Exception, e:
        print >>sys.stderr, "Could not load DOI: %s" % str(e)
        raise e

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--format', help='output format',
			default='bibtex', type=str,
			choices=['bibtex', 'html', 'text'])
    parser.add_argument('doi', help='DOIs to look up',
			nargs='+', type=str)

    arguments = parser.parse_args()

    proper_names_file = open('propernames', 'r')
    proper_names = [line.strip() for line in proper_names_file]
    proper_names_file.close()

    reference_formatter = None
    if arguments.format == 'bibtex':
	reference_formatter = formatter.BibtexFormatter(proper_names)
    elif arguments.format == 'html':
	reference_formatter = formatter.HTMLFormatter()
    elif arguments.format == 'text':
	reference_formatter = formatter.TextFormatter()

    for doi in arguments.doi:
	    process_doi(doi, reference_formatter)
